
Homework1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000023c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000026c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000002ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000afb  00000000  00000000  000002ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000709  00000000  00000000  00000de7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000039c  00000000  00000000  000014f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  0000188c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ac  00000000  00000000  000018f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000011a  00000000  00000000  00001c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001db6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 61 00 	call	0xc2	; 0xc2 <main>
  88:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <pinSet>:
void pinToggle(volatile uint8_t *port, uint8_t pin){
	*port ^=  1 << pin;
}

void pinSet(volatile uint8_t *port, uint8_t pin){
	*port |=  1 << pin;
  90:	fc 01       	movw	r30, r24
  92:	40 81       	ld	r20, Z
  94:	21 e0       	ldi	r18, 0x01	; 1
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	02 c0       	rjmp	.+4      	; 0x9e <pinSet+0xe>
  9a:	22 0f       	add	r18, r18
  9c:	33 1f       	adc	r19, r19
  9e:	6a 95       	dec	r22
  a0:	e2 f7       	brpl	.-8      	; 0x9a <pinSet+0xa>
  a2:	24 2b       	or	r18, r20
  a4:	20 83       	st	Z, r18
  a6:	08 95       	ret

000000a8 <pinReset>:
}

void pinReset(volatile uint8_t *port, uint8_t pin){
  a8:	fc 01       	movw	r30, r24
	*port &=  ~(1 << pin);
  aa:	90 81       	ld	r25, Z
  ac:	21 e0       	ldi	r18, 0x01	; 1
  ae:	30 e0       	ldi	r19, 0x00	; 0
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <pinReset+0xe>
  b2:	22 0f       	add	r18, r18
  b4:	33 1f       	adc	r19, r19
  b6:	6a 95       	dec	r22
  b8:	e2 f7       	brpl	.-8      	; 0xb2 <pinReset+0xa>
  ba:	20 95       	com	r18
  bc:	29 23       	and	r18, r25
  be:	20 83       	st	Z, r18
  c0:	08 95       	ret

000000c2 <main>:
{
	//Initialize data
	//delay = INITIAL_DELAY;
	
	//Initialize peripherals. Set all ports as outputs
	DDRB = 0xFF;
  c2:	8f ef       	ldi	r24, 0xFF	; 255
  c4:	84 b9       	out	0x04, r24	; 4
	DDRC = 0x3F;
  c6:	9f e3       	ldi	r25, 0x3F	; 63
  c8:	97 b9       	out	0x07, r25	; 7
	DDRD = 0xFF;
  ca:	8a b9       	out	0x0a, r24	; 10

	//Set the output value of the ports to low
	PORTB = 0x00;
  cc:	15 b8       	out	0x05, r1	; 5
	PORTC = 0x00;
  ce:	18 b8       	out	0x08, r1	; 8
	PORTD = 0x00;
  d0:	1b b8       	out	0x0b, r1	; 11
	//Main loop of the application.
	do{
		//delay = INITIAL_DELAY;
		
		//LEDs that have even indexes
		pinSet(&PORT_LED0, PIN_LED0);  
  d2:	64 e0       	ldi	r22, 0x04	; 4
  d4:	8b e2       	ldi	r24, 0x2B	; 43
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED2, PIN_LED2);
  dc:	66 e0       	ldi	r22, 0x06	; 6
  de:	8b e2       	ldi	r24, 0x2B	; 43
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED4, PIN_LED4);
  e6:	60 e0       	ldi	r22, 0x00	; 0
  e8:	85 e2       	ldi	r24, 0x25	; 37
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED6, PIN_LED6);
  f0:	62 e0       	ldi	r22, 0x02	; 2
  f2:	85 e2       	ldi	r24, 0x25	; 37
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED8, PIN_LED8);
  fa:	64 e0       	ldi	r22, 0x04	; 4
  fc:	85 e2       	ldi	r24, 0x25	; 37
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 104:	2f ef       	ldi	r18, 0xFF	; 255
 106:	83 e2       	ldi	r24, 0x23	; 35
 108:	94 ef       	ldi	r25, 0xF4	; 244
 10a:	21 50       	subi	r18, 0x01	; 1
 10c:	80 40       	sbci	r24, 0x00	; 0
 10e:	90 40       	sbci	r25, 0x00	; 0
 110:	e1 f7       	brne	.-8      	; 0x10a <main+0x48>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0x52>
 114:	00 00       	nop
		_delay_ms(5000);	
		
		//reset
		pinReset(&PORT_LED0, PIN_LED0);  
 116:	64 e0       	ldi	r22, 0x04	; 4
 118:	8b e2       	ldi	r24, 0x2B	; 43
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED2, PIN_LED2);
 120:	66 e0       	ldi	r22, 0x06	; 6
 122:	8b e2       	ldi	r24, 0x2B	; 43
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED4, PIN_LED4);
 12a:	60 e0       	ldi	r22, 0x00	; 0
 12c:	85 e2       	ldi	r24, 0x25	; 37
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED6, PIN_LED6);
 134:	62 e0       	ldi	r22, 0x02	; 2
 136:	85 e2       	ldi	r24, 0x25	; 37
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED8, PIN_LED8);
 13e:	64 e0       	ldi	r22, 0x04	; 4
 140:	85 e2       	ldi	r24, 0x25	; 37
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
 148:	2f ef       	ldi	r18, 0xFF	; 255
 14a:	83 e2       	ldi	r24, 0x23	; 35
 14c:	94 ef       	ldi	r25, 0xF4	; 244
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	80 40       	sbci	r24, 0x00	; 0
 152:	90 40       	sbci	r25, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0x8c>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0x96>
 158:	00 00       	nop
		_delay_ms(5000);		   
		
		//LEDs that have odd indexes
		pinSet(&PORT_LED1, PIN_LED1);
 15a:	65 e0       	ldi	r22, 0x05	; 5
 15c:	8b e2       	ldi	r24, 0x2B	; 43
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED3, PIN_LED3);
 164:	67 e0       	ldi	r22, 0x07	; 7
 166:	8b e2       	ldi	r24, 0x2B	; 43
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED5, PIN_LED5);
 16e:	61 e0       	ldi	r22, 0x01	; 1
 170:	85 e2       	ldi	r24, 0x25	; 37
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED7, PIN_LED7);
 178:	63 e0       	ldi	r22, 0x03	; 3
 17a:	85 e2       	ldi	r24, 0x25	; 37
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED9, PIN_LED9);
 182:	65 e0       	ldi	r22, 0x05	; 5
 184:	85 e2       	ldi	r24, 0x25	; 37
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	83 e2       	ldi	r24, 0x23	; 35
 190:	94 ef       	ldi	r25, 0xF4	; 244
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0xd0>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0xda>
 19c:	00 00       	nop
		_delay_ms(5000);
		
		//reset
		pinReset(&PORT_LED1, PIN_LED1);
 19e:	65 e0       	ldi	r22, 0x05	; 5
 1a0:	8b e2       	ldi	r24, 0x2B	; 43
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED3, PIN_LED3);
 1a8:	67 e0       	ldi	r22, 0x07	; 7
 1aa:	8b e2       	ldi	r24, 0x2B	; 43
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED5, PIN_LED5);
 1b2:	61 e0       	ldi	r22, 0x01	; 1
 1b4:	85 e2       	ldi	r24, 0x25	; 37
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED7, PIN_LED7);
 1bc:	63 e0       	ldi	r22, 0x03	; 3
 1be:	85 e2       	ldi	r24, 0x25	; 37
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED9, PIN_LED9);
 1c6:	65 e0       	ldi	r22, 0x05	; 5
 1c8:	85 e2       	ldi	r24, 0x25	; 37
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
 1d0:	2f ef       	ldi	r18, 0xFF	; 255
 1d2:	83 e2       	ldi	r24, 0x23	; 35
 1d4:	94 ef       	ldi	r25, 0xF4	; 244
 1d6:	21 50       	subi	r18, 0x01	; 1
 1d8:	80 40       	sbci	r24, 0x00	; 0
 1da:	90 40       	sbci	r25, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <main+0x114>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <main+0x11e>
 1e0:	00 00       	nop
 1e2:	77 cf       	rjmp	.-274    	; 0xd2 <main+0x10>

000001e4 <_exit>:
 1e4:	f8 94       	cli

000001e6 <__stop_program>:
 1e6:	ff cf       	rjmp	.-2      	; 0x1e6 <__stop_program>
