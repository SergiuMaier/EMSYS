
Interrupts2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000196  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000142  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000196  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008bd  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006fa  00000000  00000000  00000af5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a8  00000000  00000000  000011ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001498  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ab  00000000  00000000  000014dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00001887  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000018cf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 61 00 	call	0xc2	; 0xc2 <main>
  88:	0c 94 9f 00 	jmp	0x13e	; 0x13e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <pinSet>:
		_delay_ms(1000);
    }
}

void pinSet(volatile uint8_t *port, uint8_t pin){
	*port |=  1 << pin;
  90:	fc 01       	movw	r30, r24
  92:	40 81       	ld	r20, Z
  94:	21 e0       	ldi	r18, 0x01	; 1
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	02 c0       	rjmp	.+4      	; 0x9e <pinSet+0xe>
  9a:	22 0f       	add	r18, r18
  9c:	33 1f       	adc	r19, r19
  9e:	6a 95       	dec	r22
  a0:	e2 f7       	brpl	.-8      	; 0x9a <pinSet+0xa>
  a2:	24 2b       	or	r18, r20
  a4:	20 83       	st	Z, r18
  a6:	08 95       	ret

000000a8 <pinReset>:
}

void pinReset(volatile uint8_t *port, uint8_t pin){
  a8:	fc 01       	movw	r30, r24
	*port &=  ~(1 << pin);
  aa:	90 81       	ld	r25, Z
  ac:	21 e0       	ldi	r18, 0x01	; 1
  ae:	30 e0       	ldi	r19, 0x00	; 0
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <pinReset+0xe>
  b2:	22 0f       	add	r18, r18
  b4:	33 1f       	adc	r19, r19
  b6:	6a 95       	dec	r22
  b8:	e2 f7       	brpl	.-8      	; 0xb2 <pinReset+0xa>
  ba:	20 95       	com	r18
  bc:	29 23       	and	r18, r25
  be:	20 83       	st	Z, r18
  c0:	08 95       	ret

000000c2 <main>:
int flag = 0; //Initially, all 4 LEDs will be powered-on

int main(void)
{
	//Output for LEDs
	DDRB = 0x0F;
  c2:	8f e0       	ldi	r24, 0x0F	; 15
  c4:	84 b9       	out	0x04, r24	; 4
	//DDRB |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3);  
	PORTB = 0x00; 
  c6:	15 b8       	out	0x05, r1	; 5
	//EIFR |= (0 << INTF1) | (0 << INTF0);
	//PCICR |= (0 << PCIE2) | (0 << PCIE1) | (0 << PCIE0);
			
    while (1) 
    { 
		pinSet(&PORT_LED0, PIN_LED0);
  c8:	60 e0       	ldi	r22, 0x00	; 0
  ca:	8b e2       	ldi	r24, 0x2B	; 43
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED1, PIN_LED1);
  d2:	61 e0       	ldi	r22, 0x01	; 1
  d4:	8b e2       	ldi	r24, 0x2B	; 43
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED2, PIN_LED2);
  dc:	62 e0       	ldi	r22, 0x02	; 2
  de:	8b e2       	ldi	r24, 0x2B	; 43
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
		pinSet(&PORT_LED3, PIN_LED3);
  e6:	63 e0       	ldi	r22, 0x03	; 3
  e8:	8b e2       	ldi	r24, 0x2B	; 43
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 48 00 	call	0x90	; 0x90 <pinSet>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f0:	2f ef       	ldi	r18, 0xFF	; 255
  f2:	83 ed       	ldi	r24, 0xD3	; 211
  f4:	90 e3       	ldi	r25, 0x30	; 48
  f6:	21 50       	subi	r18, 0x01	; 1
  f8:	80 40       	sbci	r24, 0x00	; 0
  fa:	90 40       	sbci	r25, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <main+0x34>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <main+0x3e>
 100:	00 00       	nop
		_delay_ms(1000);
		pinReset(&PORT_LED0, PIN_LED0);
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	8b e2       	ldi	r24, 0x2B	; 43
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED1, PIN_LED1);
 10c:	61 e0       	ldi	r22, 0x01	; 1
 10e:	8b e2       	ldi	r24, 0x2B	; 43
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED2, PIN_LED2);
 116:	62 e0       	ldi	r22, 0x02	; 2
 118:	8b e2       	ldi	r24, 0x2B	; 43
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
		pinReset(&PORT_LED3, PIN_LED3);
 120:	63 e0       	ldi	r22, 0x03	; 3
 122:	8b e2       	ldi	r24, 0x2B	; 43
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	0e 94 54 00 	call	0xa8	; 0xa8 <pinReset>
 12a:	2f ef       	ldi	r18, 0xFF	; 255
 12c:	83 ed       	ldi	r24, 0xD3	; 211
 12e:	90 e3       	ldi	r25, 0x30	; 48
 130:	21 50       	subi	r18, 0x01	; 1
 132:	80 40       	sbci	r24, 0x00	; 0
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0x6e>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0x78>
 13a:	00 00       	nop
 13c:	c5 cf       	rjmp	.-118    	; 0xc8 <main+0x6>

0000013e <_exit>:
 13e:	f8 94       	cli

00000140 <__stop_program>:
 140:	ff cf       	rjmp	.-2      	; 0x140 <__stop_program>
